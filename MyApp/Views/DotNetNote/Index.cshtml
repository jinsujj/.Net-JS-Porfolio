@model IEnumerable<Note>

@inject INoteRepository DnnRepo

@{
    ViewData["Title"] = "Projects Blog";
}

<h2 style="text-align:center">Projects Blog</h2>
<span style="color: #ff0000">
    글 목록 - ASP.NET Core 3.1 version
</span>
<hr />
<div class="d-flex flex-row-reverse">
    <form method="get">
        <button type="submit" asp-action="Index" style="padding:0; border:none; background: none;">
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-card-list" viewBox="0 0 16 16">
                <path fill-rule="evenodd" d="M14.5 3h-13a.5.5 0 0 0-.5.5v9a.5.5 0 0 0 .5.5h13a.5.5 0 0 0 .5-.5v-9a.5.5 0 0 0-.5-.5zm-13-1A1.5 1.5 0 0 0 0 3.5v9A1.5 1.5 0 0 0 1.5 14h13a1.5 1.5 0 0 0 1.5-1.5v-9A1.5 1.5 0 0 0 14.5 2h-13z" />
                <path fill-rule="evenodd" d="M5 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 5 8zm0-2.5a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5zm0 5a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5z" />
                <circle cx="3.5" cy="5.5" r=".5" />
                <circle cx="3.5" cy="8" r=".5" />
                <circle cx="3.5" cy="10.5" r=".5" />
            </svg>
        </button>
        <button type="submit" asp-action="IndexCard" style="padding:0; border:none; background: none;">
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-grid-3x3-gap-fill" viewBox="0 0 16 16">
                <path d="M1 2a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2zm5 0a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1V2zm5 0a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1V2zM1 7a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V7zm5 0a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1V7zm5 0a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1V7zM1 12a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1v-2zm5 0a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1v-2zm5 0a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1v-2z" />
            </svg>
        </button>
    </form>
</div>
<table style="font-family: 'Open Sans', sans-serif; width: auto;  margin-left: auto; margin-right: auto;">
    <tr>
        <td>
            <div style="text-align:right;font-size:8pt;">
                Total Record: @ViewBag.TotalRecord
            </div>
            <table class="table table-bordered table-hover table-striped table-sm table-responsive">
                <tr style="background-color:rgb(222, 222, 222)">
                    <th style="width:60px; text-align:center;">
                        @Html.DisplayNameFor(model => model.Id)
                    </th>
                    <th style="width:360px; text-align:center;">
                        @Html.DisplayNameFor(model => model.Title)
                    </th>
                    <th style="width:60px; text-align:center">
                        @Html.DisplayNameFor(model => model.FileName)
                    </th>
                    <th style="width:80px; text-align:center;">
                        @Html.DisplayNameFor(model => model.Name)
                    </th>
                    <th style="width:100px; text-align:center;">
                        @Html.DisplayNameFor(model => model.PostDate)
                    </th>
                    <th style="width:80px; text-align:center;">
                        @Html.DisplayNameFor(model => model.ReadCount)
                    </th>
                </tr>

                @*<cache expires-after="@TimeSpan.FromMinutes(10)">*@
                    @*최근 공지 글 2개 출력: 캐싱 적용*@
                    @foreach (var item in
               DnnRepo.GetNoteSummaryByCategory("Notice").Take(2))
                    {
                        <tr>
                            <td style="text-align:center;">
                                <span class="label label-success"
                                      style="font-size:xx-small">NOTICE</span>
                            </td>
                            <td>
                                @Html.Raw(BoardLibrary.FuncStep(item.Step))
                                <a asp-controller="DotNetNote"
                                   asp-action="Details"
                                   asp-route-id="@item.Id">
                                    <strong>
                                        @StringLibrary.CutStringUnicode(
                                           item.Title, 30)
                                    </strong>
                                </a>
                                <small>
                                    @Html.Raw(BoardLibrary.ShowCommentCount(
                                        item.CommentCount))
                                </small>
                                @Html.Raw(BoardLibrary.FuncNew(item.PostDate))
                            </td>
                            <td style="text-align:center;">
                                @Html.Raw(BoardLibrary.FuncFileDownSingle(item.Id, item.FileName, item.FileSize.ToString(), "DotNetNote", "/BoardDown/"))
                            </td>
                            <td style="text-align:center;">
                                @Html.DisplayFor(modelItem => item.Name)
                            </td>
                            <td style="text-align:center;">
                                @BoardLibrary.FuncShowTime(item.PostDate)
                            </td>
                            <td style="text-align:right;">
                                @Html.DisplayFor(modelItem => item.ReadCount)
                            </td>
                        </tr>}
                @*</cache>*@

                @*게시글 출력*@
                @if (Model != null)
                {
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td style="text-align:center;">
                                @if (item.Step == 0)
                                {
                                    @Html.DisplayFor(modelItem => item.Id) }
                                else
                                {
                                    <text>&nbsp;</text>}
                            </td>
                            <td>
                                @Html.Raw(BoardLibrary.FuncStep(item.Step))
                                <a asp-controller="DotNetNote" asp-action="Details"
                                   asp-route-id="@item.Id">
                                    @StringLibrary.CutStringUnicode(item.Title, 30)
                                </a>
                                <small>
                                    @Html.Raw(BoardLibrary.ShowCommentCount(
                                        item.CommentCount))
                                </small>
                                @Html.Raw(BoardLibrary.FuncNew(item.PostDate))
                            </td>
                            <td style="text-align:center;">
                                @Html.Raw(BoardLibrary.FuncFileDownSingle(item.Id, item.FileName, item.FileSize.ToString(), "DotNetNote", "/BoardDown/"))
                            </td>
                            <td style="text-align:center;">
                                @Html.DisplayFor(modelItem => item.Name)
                            </td>
                            <td style="text-align:center;">
                                @BoardLibrary.FuncShowTime(item.PostDate)
                            </td>
                            <td style="text-align:right;">
                                @Html.DisplayFor(modelItem => item.ReadCount)
                            </td>
                        </tr>
                    }}
            </table>
        </td>
    </tr>
    @*<tr style="display:flex; flex-wrap:wrap; justify-content:center">
            <td style="text-align:center;">
                <dnn-paging-helper url="@Context.Request.Path"
                                   page-index='Convert.ToInt32(Context.Request.Query["Page"])'
                                   page-size="10"
                                   record-count="@ViewBag.TotalRecord"
                                   search-mode='Convert.ToBoolean(@ViewBag.SearchMode)'
                                   search-field="@ViewBag.SearchField"
                                   search-query="@ViewBag.SearchQuery">
                </dnn-paging-helper>
            </td>
        </tr>*@
    <tr style="display:flex; flex-wrap:wrap; justify-content:center">
        <td class="text-center">
            @await Html.PartialAsync("_AdvancedPagingWithCss", ViewBag.PageModel as PagerBase)
        </td>
    </tr>
    <tr>
        @if (User.Identity.IsAuthenticated)
        {
            <td style="text-align:right;">
                <a asp-action="Create" class="btn btn-primary">글쓰기</a>
            </td>
        }
    </tr>
    <tr>
        <td style="text-align:center;">
            @await Html.PartialAsync("_SearchForm")
            <br />
            @if (ViewBag.SearchMode)
            {
                <a asp-controller="DotNetNote" asp-action="Index" class="btn btn-success">검색 완료</a>
            }
        </td>
    </tr>
</table>

